{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst btn = document.querySelector(\"button[data-start]\");\nconst daysSpan = document.querySelector(\"[data-days]\");\nconst hoursSpan= document.querySelector(\"[data-hours]\");\nconst minutesSpan = document.querySelector(\"[data-minutes]\");\nconst secondsSpan = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate;\nlet intervalId;\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate <= new Date()) {\n            window.alert(\"Please choose a date in the future\");\n            btn.disabled = true;\n        } else {\n            btn.disabled = false;\n        }\n    },\n  };\n  \n\nflatpickr(\"#datetime-picker\", options);\n\n\n\nbtn.addEventListener('click', () => {\n    btn.disabled = true;\n    input.disabled = true;\n\n    intervalId = setInterval(() => {\n        const nowTime = new Date();\n        const timeDifference = userSelectedDate - nowTime;\n\n        if (timeDifference <= 0) {\n            clearInterval(intervalId);\n            updateTimer(0);\n            input.disabled = false;\n        } else {\n            updateTimer(timeDifference);\n        }\n    }, 1000);\n});\n\n\nfunction updateTimer(ms) {\n    const { days, hours, minutes, seconds } = convertMs(ms);\n    daysSpan.textContent = addLeadingZero(days);\n    hoursSpan.textContent = addLeadingZero(hours);\n    minutesSpan.textContent = addLeadingZero(minutes);\n    secondsSpan.textContent = addLeadingZero(seconds);\n\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart( 2, \"0\");\n}"],"names":["input","btn","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","intervalId","options","selectedDates","flatpickr","timeDifference","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"wIAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,oBAAoB,EACjDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EACAC,EAGJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MACxB,OAAO,MAAM,oCAAoC,EACjDL,EAAI,SAAW,IAEfA,EAAI,SAAW,EAEtB,CACL,EAGAS,EAAU,mBAAoBF,CAAO,EAIrCP,EAAI,iBAAiB,QAAS,IAAM,CAChCA,EAAI,SAAW,GACfD,EAAM,SAAW,GAEjBO,EAAa,YAAY,IAAM,CAE3B,MAAMI,EAAiBL,EADP,IAAI,KAGhBK,GAAkB,GAClB,cAAcJ,CAAU,EACxBK,EAAY,CAAC,EACbZ,EAAM,SAAW,IAEjBY,EAAYD,CAAc,CAEjC,EAAE,GAAI,CACX,CAAC,EAGD,SAASC,EAAYC,EAAI,CACrB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDX,EAAS,YAAciB,EAAeL,CAAI,EAC1CX,EAAU,YAAcgB,EAAeJ,CAAK,EAC5CX,EAAY,YAAce,EAAeH,CAAO,EAChDX,EAAY,YAAcc,EAAeF,CAAO,CAEpD,CAEA,SAASC,EAAUL,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAU,EAAG,GAAG,CACzC"}